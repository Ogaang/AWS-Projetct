AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template provisions an EC2 instance in a VPC Subnet provisioned in a different stack.

# This template creates:
#   Amazon EC2 instance
#   Security Group

######################
# Parameters section
######################

Parameters:

  NetworkStackName:
    Description: >-
      Name of an active CloudFormation stack that contains the networking
      resources, such as the VPC and subnet that will be used in this stack.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: Project-Network-Kor
  EC2KeyPair:
    Type: String
    Default: "EC2-keypair"
  AZInstance1:
    Description: AvailabilityZone for instance
    Type: AWS::EC2::AvailabilityZone::Name
  AZInstance2:
    Description: AvailabilityZone for instance
    Type: AWS::EC2::AvailabilityZone::Name
  PublicSubnet3:
    Description: public 3
    Type: AWS::EC2::Subnet::Id
  PublicSubnet4:
    Description: public 4
    Type: AWS::EC2::Subnet::Id
######################
# Resources section
######################

Resources:

  GameServerInstance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      AvailabilityZone: !Ref AZInstance1
      ImageId: ami-01ac1d6bd8b029015
      KeyName: !Ref EC2KeyPair
      NetworkInterfaces:
        - GroupSet:
            - !Ref GameServerSG
          AssociatePublicIpAddress: true
          DeviceIndex: 0
          DeleteOnTermination: true
          SubnetId:
            Fn::ImportValue:
              !Sub ${NetworkStackName}-Subnet1
      Tags:
        - Key: Name
          Value: Game Server

  DiskVolume:
    Type: AWS::EC2::Volume
    Properties:
      Size: 20
      AvailabilityZone: !GetAtt GameServerInstance1.AvailabilityZone
      Tags:
        - Key: Name
          Value: Game Web Data
    DeletionPolicy: Snapshot

  DiskMountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref GameServerInstance1
      VolumeId: !Ref DiskVolume
      Device: /dev/sdh
  
  GameServerInstance2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      AvailabilityZone: !Ref AZInstance2
      ImageId: ami-01ac1d6bd8b029015
      KeyName: !Ref EC2KeyPair
      NetworkInterfaces:
        - GroupSet:
            - !Ref GameServerSG
          AssociatePublicIpAddress: true
          DeviceIndex: 0
          DeleteOnTermination: true
          SubnetId:
            Fn::ImportValue:
              !Sub ${NetworkStackName}-Subnet2
      UserData:
        Fn::Base64:
          !Join [ "", [
          "#!/bin/bash\n",
          "amazon-linux-extras install -y epel\n",
          "yum install -y httpd php git stress\n",
          "git clone https://github.com/suminhong/cloudformation_yaml.git /cf\n",
          "mv /cf/webstress.php /var/www/html/index.php\n",
          "rm -f /var/www/html/index.html\n",
          "systemctl enable httpd\n",
          "systemctl start httpd\n"] ]
      Tags:
        - Key: Name
          Value: Game Server

  DiskVolume:
    Type: AWS::EC2::Volume
    Properties:
      Size: 20
      AvailabilityZone: !GetAtt GameServerInstance2.AvailabilityZone
      Tags:
        - Key: Name
          Value: Game Web Data
    DeletionPolicy: Snapshot

  DiskMountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref GameServerInstance2
      VolumeId: !Ref DiskVolume
      Device: /dev/sdh

  GameServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP ingress
      VpcId:
        Fn::ImportValue:
          !Sub ${NetworkStackName}-KorVPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Game Web Server Security Group
  GameConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-01ac1d6bd8b029015
      KeyName: !Ref EC2KeyPair
      InstanceType: t2.micro
      SecurityGroups:
        - Ref: GameServerSG
  GameALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: gameserverALB
      Type: application
      SecurityGroups:
        - !Ref GameServerSG
      Subnets:
        - !Ref PublicSubnet3
        - !Ref PublicSubnet4
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: GameTG
      Port: 80
      Protocol: HTTP
      VpcId:
        Fn::ImportValue:
          !Sub ${NetworkStackName}-KorVPCID
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup   
      LoadBalancerArn: !Ref GameALB
      Port: 80
      Protocol: HTTP
  ASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: GasmeserverASG
      VPCZoneIdentifier:
        - !Ref PublicSubnet3
        - !Ref PublicSubnet4
      Cooldown: 10
      LaunchConfigurationName: !Ref GameConfig
      MaxSize: 4
      MinSize: 2
      DesiredCapacity: 2
      TargetGroupARNs:
        - !Ref TargetGroup
      Tags:
        - Key: Name
          Value: GameServer-ASG
          PropagateAtLaunch: true

  ASGPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref ASG
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 80
      

######################
# Outputs section
######################

Outputs:
  URL:
    Description: URL of the Game website
    Value: !Sub '<http://$>{GameServerInstance1.PublicDnsName}'
  URL:
    Description: URL of the Game website
    Value: !Sub '<http://$>{GameServerInstance2.PublicDnsName}'

  GameServerSG:
    Description: The SecurityGroup ID to use for public game web servers
    Value: !Ref GameServerSG
    Export:
      Name: !Sub '${AWS::StackName}-KorSG'